# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "CI"
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14.5
        ports:
          - "5432:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
    env:
      POSTGRES_DB: rails_test
      POSTGRES_USER: rails
      POSTGRES_PASSWORD: password
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2
          bundler-cache: true

      - name: Set up Rails
        run: |
          cp config/database.ci.yml config/database.yml

      - name: Set up database schema
        run: |
          bin/rails db:reset --trace

      - name: Run rspec tests
        run: bundle exec rspec

      - name: Run rails tests
        run: bundle exec rails test
        
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1
          bundler-cache: true
      - name: Security audit dependencies
        run: bundle exec bundler-audit --update
      - name: Security audit application code
        run: bundle exec brakeman -q -w2
      # - name: Lint Ruby files
      #   run: bin/rubocop --parallel

  
  build_and_push:
    name: Docker build and push
    needs: [test, lint]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    
      - name: Checkout the repo 
        uses: actions/checkout@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build image 
        run: docker build -t registry.digitalocean.com/nsgcr/nrdb-api-server:latest .
        
      - name: Install doctl 
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          
      - name: Log in to DO Container Registry 
        run: doctl registry login --expiry-seconds 600
        
      - name: Tag image with run id
        run:
          docker tag registry.digitalocean.com/nsgcr/nrdb-api-server:latest registry.digitalocean.com/nsgcr/nrdb-api-server:${{ github.run_id }}
          
      - name: Push image to DO Container Registry 
        run: docker push registry.digitalocean.com/nsgcr/nrdb-api-server:${{ github.run_id }} && docker push registry.digitalocean.com/nsgcr/nrdb-api-server:latest